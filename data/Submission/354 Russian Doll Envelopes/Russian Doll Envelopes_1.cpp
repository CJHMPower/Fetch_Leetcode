//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 354 Russian Doll Envelopes
// https://leetcode.com//problems/russian-doll-envelopes/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 1182 ms

class Solution {
 public:
  int maxEnvelopes(vector<pair<int, int>>& envelopes) {
    if (envelopes.empty()) {
      return 0;
    }
    auto f = [](pair<int, int> a, pair<int, int> b) {
      return (a.first < b.first);
    };
    auto cmp = [](pair<int, int> a, pair<int, int> b) {
      return (a.first < b.first) && (a.second < b.second);
    };
    sort(envelopes.begin(), envelopes.end(), f);
    vector<int> dp(envelopes.size(), 1);
    int result = 1;
    for (int i = 1; i < envelopes.size(); i++) {
      for (int j = i - 1; j >= 0; j--) {
        if (cmp(envelopes[j], envelopes[i]) == true) {
          dp[i] = max(dp[i], dp[j] + 1);
        }
      }
      result = max(result, dp[i]);
    }
    return result;
  }
};