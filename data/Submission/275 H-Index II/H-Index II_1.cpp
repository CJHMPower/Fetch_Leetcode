//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 275 H-Index II
// https://leetcode.com//problems/h-index-ii/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 16 ms
// This solution defeats 97.68% cpp solutions

class Solution {
 public:
  int hIndex(vector<int>& citations) {
    if (citations.empty()) {
      return 0;
    }
    if (*(citations.end() - 1) == 0) {
      return 0;
    }
    int low = 0, high = citations.size() - 1;
    int mid;
    while (low <= high) {
      mid = (low + high) / 2;
      if (citations.size() - mid - citations[mid] == 0) {
        return citations[mid];
      }
      if (((int)citations.size() - mid - citations[mid]) < 0) {
        high = mid - 1;
      } else {
        low = mid + 1;
      }
    }
    return max(min(citations[low], (int)citations.size() - low),
               min(citations[high], (int)citations.size() - high));
  }
};