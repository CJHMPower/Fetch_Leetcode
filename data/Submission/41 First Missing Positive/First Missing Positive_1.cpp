//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 41 First Missing Positive
// https://leetcode.com//problems/first-missing-positive/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 3 ms
// This solution defeats 74.29% cpp solutions

class Solution {
 public:
  int firstMissingPositive(vector<int>& nums) {
    if (nums.empty()) {
      return 1;
    }
    for (int i = 0; i < nums.size(); i++) {
      while (nums[i] > 0 && nums[i] <= nums.size() &&
             nums[i] != nums[nums[i] - 1]) {
        swap(nums[i], nums[nums[i] - 1]);
      }
    }
    for (int j = 0; j < nums.size(); j++) {
      if (nums[j] != j + 1) {
        return j + 1;
      }
    }
    return nums.size() + 1;
  }
};