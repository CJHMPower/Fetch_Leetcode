//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 285 Inorder Successor in BST
// https://leetcode.com//problems/inorder-successor-in-bst/description/
// Fetched at 2018-07-24
// Submitted 5 months, 1 week ago
// Runtime: 27 ms
// This solution defeats 2.92% cpp solutions

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
 public:
  TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {
    if (root == NULL) {
      return NULL;
    }
    int target = p->val;
    TreeNode* pts = root;
    if (p->right != NULL) {
      pts = p->right;
      while (pts->left) {
        pts = pts->left;
      }
      return pts;
    } else {
      int cmp = pow(2, 31) - 1;
      TreeNode* ret = NULL;
      while (pts != NULL && pts != p) {
        if (pts->val > target && pts->val < cmp) {
          cmp = pts->val;
          ret = pts;
        }
        if (pts->val < target) {
          pts = pts->right;
        } else {
          pts = pts->left;
        }
      }
      return ret;
    }
  }
};