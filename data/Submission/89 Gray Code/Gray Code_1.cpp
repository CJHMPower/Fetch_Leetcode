//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 89 Gray Code
// https://leetcode.com//problems/gray-code/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 9 ms
// This solution defeats 1.65% cpp solutions

class Solution {
 public:
  vector<int> grayCode(int n) {
    if (n == 0) {
      return {0};
    }
    if (n == 1) {
      return {0, 1};
    }
    vector<int> recur = grayCode(n - 1);
    int m = recur.size();
    for (int i = m - 1; i >= 0; i--) {
      recur.push_back(recur[i] + pow(2, n - 1));
    }
    return recur;
  }
};