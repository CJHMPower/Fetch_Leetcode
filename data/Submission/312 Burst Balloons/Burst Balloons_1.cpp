//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 312 Burst Balloons
// https://leetcode.com//problems/burst-balloons/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 43 ms
// This solution defeats 4.95% cpp solutions

class Solution {
 public:
  int maxCoins(vector<int>& nums) {
    nums.insert(nums.begin(), 1);
    nums.push_back(1);
    int n = nums.size();
    vector<vector<int>> dp(n, vector<int>(n, 0));
    for (int d = 2; d < n; d++) {
      for (int l = 0; l + d < n; l++) {
        int r = l + d;
        for (int k = l + 1; k < r; k++) {
          dp[l][r] =
              max(dp[l][r], dp[l][k] + dp[k][r] + nums[l] * nums[k] * nums[r]);
        }
      }
    }
    return dp[0][n - 1];
  }
};