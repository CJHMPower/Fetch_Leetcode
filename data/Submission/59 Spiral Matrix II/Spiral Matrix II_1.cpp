//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 59 Spiral Matrix II
// https://leetcode.com//problems/spiral-matrix-ii/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 4 ms
// This solution defeats 10.51% cpp solutions

class Solution {
 public:
  vector<vector<int>> generateMatrix(int n) {
    vector<vector<int>> result(n, vector<int>(n));
    if (n == 0) {
      return result;
    }
    int d1 = 0, d2 = n - 1, d3 = 0, d4 = n - 1;
    int count = 1;
    while (d1 <= d4 && d2 >= d3) {
      for (int i = d3; i <= d2; i++) result[d1][i] = count++;
      d1++;
      for (int i = d1; i <= d4; i++) result[i][d2] = count++;
      d2--;
      for (int i = d2; i >= d3; i--) result[d4][i] = count++;
      d4--;
      for (int i = d4; i >= d1; i--) result[i][d3] = count++;
      d3++;
    }
    return result;
  }
};