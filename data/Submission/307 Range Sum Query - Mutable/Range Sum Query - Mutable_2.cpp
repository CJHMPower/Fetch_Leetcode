//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 307 Range Sum Query - Mutable
// https://leetcode.com//problems/range-sum-query---mutable/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 588 ms
// This solution defeats 1.78% cpp solutions

class NumArray {
 public:
  NumArray(vector<int> &nums) { arr = nums; }

  void update(int i, int val) {
    if (i >= 0 && i < arr.size()) {
      arr[i] = val;
    }
  }

  int sumRange(int i, int j) {
    if (i > j || i < 0 || j >= arr.size()) {
      return 0;
    }
    int sum = 0;
    for (int index = i; index <= j; index++) {
      sum += arr[index];
    }
    return sum;
  }

 private:
  vector<int> arr;
};

// Your NumArray object will be instantiated and called as such:
// NumArray numArray(nums);
// numArray.sumRange(0, 1);
// numArray.update(1, 10);
// numArray.sumRange(1, 2);