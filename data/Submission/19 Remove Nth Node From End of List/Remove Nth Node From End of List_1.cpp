//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 19 Remove Nth Node From End of List
// https://leetcode.com//problems/remove-nth-node-from-end-of-list/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 8 ms
// This solution defeats 3.1% cpp solutions

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
 public:
  ListNode* removeNthFromEnd(ListNode* head, int n) {
    if (head == nullptr) {
      return head;
    }
    ListNode* pre = head;
    ListNode* back = pre;
    int i = 0;
    while (back != nullptr && i < n) {
      back = back->next;
      i++;
    }
    if (back == nullptr) {
      head = head->next;
      pre->next = nullptr;
      free(pre);
      return head;
    }
    while (back->next != nullptr) {
      pre = pre->next;
      back = back->next;
    }
    ListNode* r = pre->next;
    pre->next = r->next;
    free(r);
    return head;
  }
};