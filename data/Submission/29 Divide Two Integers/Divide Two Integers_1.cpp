//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 29 Divide Two Integers
// https://leetcode.com//problems/divide-two-integers/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 12 ms
// This solution defeats 96.63% cpp solutions

class Solution {
 public:
  int divide(int dividend, int divisor) {
    if (dividend == 0) {
      return 0;
    }
    long long int temp = 0;
    long long int num1 = dividend;
    long long int num2 = divisor;
    int sign = 1;
    if ((num1 < 0 && num2 > 0) || (num1 > 0 && num2 < 0)) {
      sign = -1;
    }
    num1 = abs(num1);
    num2 = abs(num2);
    long long int ret = 0;
    while (num1 >= num2) {
      long long temp = num2;
      int i = 0;

      while (num1 >= temp) {
        ret += (1 << i);
        num1 -= temp;

        temp <<= 1;
        i++;
      }
    }
    if (ret > INT_MAX && sign == 1) {
      return INT_MAX;
    }
    if (sign == 1)
      return ret;
    else {
      return -ret;
    }
  }
};