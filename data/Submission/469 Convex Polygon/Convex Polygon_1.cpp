//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 469 Convex Polygon
// https://leetcode.com//problems/convex-polygon/description/
// Fetched at 2018-07-24
// Submitted 3 months, 2 weeks ago
// Runtime: 48 ms

class Solution {
 public:
  float compute_cos(pair<int, int> line1, pair<int, int> line2) {
    float length1 = sqrt(pow(line1.first, 2) + pow(line1.second, 2));
    float length2 = sqrt(pow(line2.first, 2) + pow(line2.second, 2));
    return acos((line1.first * line2.first + line1.second * line2.second) /
                (length1 * length2));
  }
  bool isConvex(vector<vector<int>>& points) {
#define PI 3.1415926
    int n = points.size();
    float ret = 0;
    for (int i = 0, j = 0; j < n; j++, i = (i + 1) % n) {
      pair<int, int> line1 =
          make_pair(points[i][0] - points[(i - 1 + n) % n][0],
                    points[i][1] - points[(i - 1 + n) % n][1]);
      pair<int, int> line2 = make_pair(points[(i + 1) % n][0] - points[i][0],
                                       points[(i + 1) % n][1] - points[i][1]);

      float angle = compute_cos(line1, line2);
      ret += angle;

      if (ret > 2 * PI + 0.001) {
        return false;
      }
    }

    return fabs(ret - 2 * PI) < 0.001;
  }
};