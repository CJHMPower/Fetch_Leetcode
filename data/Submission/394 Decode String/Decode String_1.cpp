//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 394 Decode String
// https://leetcode.com//problems/decode-string/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 3 ms

class Solution {
 public:
  string decodeString(string s) {
    if (s.empty()) {
      return s;
    }
    stack<int> nums;
    stack<char> ch;
    for (int j = 0; j < s.size();) {
      if (s[j] <= '9' && s[j] >= '0') {
        int k = j;
        while (s[k] <= '9' && s[k] >= '0') {
          k++;
        }
        string num = s.substr(j, k - j);
        nums.push(stoi(num));
        j = k;
      } else if (s[j] == '[') {
        ch.push(s[j++]);
      } else if (s[j] == ']') {
        int times = nums.top();
        nums.pop();
        string temp;
        while (ch.top() != '[') {
          string sc = "0";
          sc[0] = ch.top();
          temp = sc + temp;
          ch.pop();
        }
        ch.pop();
        for (int i = 0; i < times; i++) {
          for (auto u : temp) {
            ch.push(u);
          }
        }
        j++;
      } else {
        ch.push(s[j++]);
      }
    }
    string result;
    while (!ch.empty() && ch.top() != '[') {
      string c = "0";
      c[0] = ch.top();
      result = c + result;
      ch.pop();
    }
    return result;
  }
};