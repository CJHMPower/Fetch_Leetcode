//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 513 Find Bottom Left Tree Value
// https://leetcode.com//problems/find-bottom-left-tree-value/description/
// Fetched at 2018-07-24
// Submitted 5 months, 1 week ago
// Runtime: 12 ms
// This solution defeats 5.89% cpp solutions

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
 public:
  int findBottomLeftValue(TreeNode* root) {
    queue<TreeNode*> level;
    TreeNode* ret = root;
    level.push(root);
    while (!level.empty()) {
      TreeNode* p = level.front();
      if (p->right != NULL) {
        level.push(p->right);
      }
      if (p->left != NULL) {
        level.push(p->left);
      }
      ret = level.back();
      level.pop();
    }
    return ret->val;
  }
};