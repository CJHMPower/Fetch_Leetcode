//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 1 Two Sum
// https://leetcode.com//problems/two-sum/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 12 ms
// This solution defeats 41.28% cpp solutions

class Solution {
 public:
  vector<int> twoSum(vector<int>& nums, int target) {
    int low = 0, high = nums.size() - 1;
    vector<pair<int, int>> hash;
    for (int i = 0; i < nums.size(); i++) {
      hash.push_back({i, nums[i]});
    }
    auto compare = [](pair<int, int> a, pair<int, int> b) -> bool {
      return a.second < b.second;
    };
    sort(hash.begin(), hash.end(), compare);
    vector<int> result;
    while (high > low) {
      if (hash[low].second + hash[high].second == target) {
        result.push_back(hash[low].first);
        result.push_back(hash[high].first);
        break;
      } else if (hash[low].second + hash[high].second < target) {
        low++;
      } else {
        high--;
      }
    }
    return result;
  }
};