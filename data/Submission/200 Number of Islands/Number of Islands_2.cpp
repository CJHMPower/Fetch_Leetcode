//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 200 Number of Islands
// https://leetcode.com//problems/number-of-islands/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 8 ms
// This solution defeats 98.53% cpp solutions

class Solution {
 public:
  void dfs(int u, int v, vector<vector<char>>& grid) {
    if (u >= grid.size() || u < 0 || v >= grid[0].size() || v < 0 ||
        grid[u][v] != '1') {
      return;
    }
    grid[u][v] = '0';
    dfs(u + 1, v, grid);
    dfs(u, v + 1, grid);
    dfs(u - 1, v, grid);
    dfs(u, v - 1, grid);
  }
  int numIslands(vector<vector<char>>& grid) {
    int count = 0;
    for (int i = 0; i < grid.size(); i++)
      for (int j = 0; j < grid[0].size(); j++) {
        if (grid[i][j] == '1') {
          count++;
          dfs(i, j, grid);
        }
      }
    return count;
  }
};