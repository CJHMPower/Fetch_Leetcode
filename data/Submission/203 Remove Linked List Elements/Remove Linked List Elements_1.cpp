//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 203 Remove Linked List Elements
// https://leetcode.com//problems/remove-linked-list-elements/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 32 ms
// This solution defeats 2.01% cpp solutions

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
 public:
  ListNode* removeElements(ListNode* head, int val) {
    if (head == nullptr) {
      return head;
    }
    ListNode* phead = head;
    ListNode* r = phead;
    while (phead != nullptr && phead->val == val) {
      phead = phead->next;
      free(r);
      r = phead;
    }
    head = phead;
    ListNode* p = head;
    while (p != nullptr) {
      while (p->next != nullptr && p->next->val != val) {
        p = p->next;
      }
      r = p->next;
      ListNode* temp = r;
      while (r != nullptr && r->val == val) {
        r = r->next;
        free(temp);
        temp = r;
      }
      p->next = r;
      p = p->next;
    }
    return head;
  }
};