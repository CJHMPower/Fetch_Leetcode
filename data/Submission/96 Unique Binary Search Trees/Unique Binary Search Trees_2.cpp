//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 96 Unique Binary Search Trees
// https://leetcode.com//problems/unique-binary-search-trees/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 2 ms
// This solution defeats 5.36% cpp solutions

class Solution {
 public:
  int numTrees(int n) {
    if (n == 1) {
      return 1;
    }
    if (n == 2) {
      return 2;
    }
    vector<int> dp(n + 1);
    dp[0] = 1;
    dp[1] = 1;
    int sum = 0;
    for (int i = 2; i <= n; i++) {
      sum = 0;
      for (int j = 0; j < i; j++) {
        sum += dp[j] * dp[i - 1 - j];
      }
      dp[i] = sum;
    }
    return dp[n];
  }
};