//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 206 Reverse Linked List
// https://leetcode.com//problems/reverse-linked-list/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 11 ms
// This solution defeats 2.9% cpp solutions

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
 public:
  ListNode* reverseList(ListNode* head) {
    if (head == nullptr || head->next == nullptr) {
      return head;
    }
    ListNode* p1 = head;
    ListNode* p2 = head->next;
    p1->next = nullptr;
    ListNode* p3 = p2->next;
    while (p3 != nullptr) {
      p2->next = p1;
      p1 = p2;
      p2 = p3;
      p3 = p3->next;
    }
    p2->next = p1;
    return p2;
  }
};