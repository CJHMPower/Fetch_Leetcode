//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 318 Maximum Product of Word Lengths
// https://leetcode.com//problems/maximum-product-of-word-lengths/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 472 ms
// This solution defeats 4.62% cpp solutions

class Solution {
 public:
  Solution() = default;
  Solution(string& s) {
    bitset<26> index;
    id = 0;
    for (int i = 0; i < s.size(); i++) {
      index.set((int)(s[i] - 'a'), 1);
    }
    for (int i = 0; i < index.size(); i++) {
      if (index[i] == 1) id += pow(2, i);
    }
    length = s.size();
  }
  int id;
  int length;
  int maxProduct(vector<string>& words) {
    vector<Solution> test;
    int max = 0;
    for (int i = 0; i < words.size(); i++) {
      test.push_back(Solution(words[i]));
    }
    for (int i = 0; i < test.size(); i++) {
      cout << test[i].id << " " << test[i].length << endl;
      for (int j = i + 1; j < test.size(); j++) {
        if ((test[i].id & test[j].id) == 0 &&
            test[i].length * test[j].length > max) {
          max = test[i].length * test[j].length;
        }
      }
    }
    return max;
  }
};