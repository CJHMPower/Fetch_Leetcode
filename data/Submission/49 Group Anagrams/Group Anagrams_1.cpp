//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 49 Group Anagrams
// https://leetcode.com//problems/group-anagrams/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 100 ms
// This solution defeats 7.91% cpp solutions

class Solution {
 public:
  vector<vector<string>> groupAnagrams(vector<string>& strs) {
    map<string, vector<string>> hash;
    for (auto s : strs) {
      string temp = s;
      sort(temp.begin(), temp.end());
      if (hash.find(temp) == hash.end()) {
        hash.insert({temp, {s}});
      } else {
        hash[temp].push_back(s);
      }
    }
    vector<vector<string>> result;
    for (auto it = hash.begin(); it != hash.end(); it++) {
      result.push_back(it->second);
    }
    return result;
  }
};