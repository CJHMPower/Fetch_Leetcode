// -*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 280 Wiggle Sort
// https://leetcode.com//problems/wiggle-sort/description/
// Fetched at 2018-07-24
// Submitted 1 month, 3 weeks ago
// Runtime: 1 ms
// This solution defeats 96.2% java solutions

class Solution {
  public void swap(int[] nums, int i, int j) {
    int temp = nums[i];
    nums[i] = nums[j];
    nums[j] = temp;
  }

  public void wiggleSort(int[] nums) {
    for (int i = 0; i < nums.length - 1; i++) {
      if (i % 2 == 0) {
        if (!(nums[i] <= nums[i + 1])) {
          swap(nums, i, i + 1);
        }
      } else if (!(nums[i] >= nums[i + 1])) {
        swap(nums, i, i + 1);
      }
    }
  }
}
