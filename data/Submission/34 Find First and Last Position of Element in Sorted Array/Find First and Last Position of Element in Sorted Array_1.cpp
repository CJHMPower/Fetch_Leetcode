//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 34 Find First and Last Position of Element in Sorted Array
// https://leetcode.com//problems/find-first-and-last-position-of-element-in-sorted-array/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 12 ms
// This solution defeats 1.62% cpp solutions

class Solution {
 public:
  vector<int> searchRange(vector<int>& nums, int target) {
    int low = 0, high = nums.size() - 1;
    int mid;
    while (high >= low) {
      mid = (low + high) / 2;
      if (nums[mid] == target) {
        low = mid;
        high = mid;
        while (low >= 0 && nums[low] == target) {
          low--;
        }
        while (high < nums.size() && nums[high] == target) {
          high++;
        }
        return {low + 1, high - 1};
      } else if (nums[mid] > target) {
        high = mid - 1;
      } else {
        low = mid + 1;
      }
    }
    return {-1, -1};
  }
};