//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 298 Binary Tree Longest Consecutive Sequence
// https://leetcode.com//problems/binary-tree-longest-consecutive-sequence/description/
// Fetched at 2018-07-24
// Submitted 4 months, 3 weeks ago
// Runtime: 560 ms

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
 public:
  int headConsecutive(TreeNode* root) {
    if (root == NULL) {
      return 0;
    }
    int maxv = 1;
    if (root->left != NULL && root->val == root->left->val - 1) {
      maxv = max(maxv, 1 + headConsecutive(root->left));
    }
    if (root->right != NULL && root->val == root->right->val - 1) {
      maxv = max(maxv, 1 + headConsecutive(root->right));
    }
    return maxv;
  }
  int longestConsecutive(TreeNode* root) {
    if (root == NULL) {
      return 0;
    }
    int maxv =
        max(longestConsecutive(root->left), longestConsecutive(root->right));
    maxv = max(maxv, headConsecutive(root));
    return maxv;
  }
};