//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 260 Single Number III
// https://leetcode.com//problems/single-number-iii/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 20 ms
// This solution defeats 1.98% cpp solutions

class Solution {
 public:
  vector<int> singleNumber(vector<int>& nums) {
    vector<int> result(2, 0);
    int bits = 0;
    for (int i = 0; i < nums.size(); i++) {
      bits = bits ^ nums[i];
    }
    bits = bits & ~(bits - 1);
    for (int i = 0; i < nums.size(); i++) {
      if (nums[i] & bits) {
        result[0] = result[0] ^ nums[i];
      } else {
        result[1] = result[1] ^ nums[i];
      }
    }
    return result;
  }
};