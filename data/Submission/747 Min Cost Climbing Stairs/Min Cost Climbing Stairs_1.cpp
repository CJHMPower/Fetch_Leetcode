//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 747 Min Cost Climbing Stairs
// https://leetcode.com//problems/min-cost-climbing-stairs/description/
// Fetched at 2018-07-24
// Submitted 5 months ago
// Runtime: 12 ms
// This solution defeats 3.05% cpp solutions

class Solution {
 public:
  int minCostClimbingStairs(vector<int>& cost) {
    if (cost.size() < 2) {
      return 0;
    }
    vector<int> dp(cost.size() + 1, INT_MAX);
    dp[0] = 0;
    dp[1] = 0;
    for (int i = 2; i <= cost.size(); i++) {
      dp[i] = min(dp[i], min(dp[i - 2] + cost[i - 2], dp[i - 1] + cost[i - 1]));
    }
    return dp.back();
  }
};