//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 232 Implement Queue using Stacks
// https://leetcode.com//problems/implement-queue-using-stacks/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 0 ms
// This solution defeats 100.0% cpp solutions

class Queue {
 public:
  // Push element x to the back of queue.
  void push(int x) {
    while (!sta2.empty()) {
      int temp = sta2.top();
      sta2.pop();
      sta1.push(temp);
    }
    sta1.push(x);
  }

  // Removes the element from in front of queue.
  void pop(void) {
    if (!(*this).empty()) {
      while (!sta1.empty()) {
        int temp = sta1.top();
        sta1.pop();
        sta2.push(temp);
      }
      sta2.pop();
    }
  }

  // Get the front element.
  int peek(void) {
    if (!(*this).empty()) {
      while (!sta1.empty()) {
        int temp = sta1.top();
        sta1.pop();
        sta2.push(temp);
      }
    }
    return sta2.top();
  }

  // Return whether the queue is empty.
  bool empty(void) { return sta1.empty() && sta2.empty(); }
  stack<int> sta1;
  stack<int> sta2;
};