//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 451 Sort Characters By Frequency
// https://leetcode.com//problems/sort-characters-by-frequency/description/
// Fetched at 2018-07-24
// Submitted 4 months ago
// Runtime: 13 ms
// This solution defeats 36.07% cpp solutions

class Solution {
 public:
  string frequencySort(string s) {
    string ret;
    vector<pair<int, int>> hash(128, make_pair(0, 0));
    for (int i = 0; i < 128; i++) {
      hash[i].first = i;
    }
    for (auto c : s) {
      hash[c].second++;
    }
    sort(hash.begin(), hash.end(), [](pair<int, int>& a, pair<int, int>& b) {
      return a.second > b.second;
    });
    for (int i = 0; i < 128; i++) {
      if (hash[i].second == 0) {
        return ret;
      }
      ret = ret + string(hash[i].second, char(hash[i].first));
    }
    return ret;
  }
};