//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 373 Find K Pairs with Smallest Sums
// https://leetcode.com//problems/find-k-pairs-with-smallest-sums/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 23 ms
// This solution defeats 28.34% cpp solutions

class Solution {
 public:
  vector<pair<int, int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2,
                                        int k) {
    vector<pair<int, int>> result;
    if (nums1.empty() || nums2.empty()) {
      return result;
    }
    int m = nums1.size();
    int n = nums2.size();
    for (int i = 0; i < m; i++) {
      for (int j = 0; j < n; j++) {
        if ((i + 1) * (j + 1) <= k) {
          result.push_back({nums1[i], nums2[j]});
        } else {
          break;
        }
      }
    }
    auto cmp = [](pair<int, int> a, pair<int, int> b) {
      return a.first + a.second < b.first + b.second;
    };
    sort(result.begin(), result.end(), cmp);
    if (m * n >= k) {
      result.erase(result.begin() + k, result.end());
    }
    return result;
  }
};