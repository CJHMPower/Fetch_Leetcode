// -*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 623 Add One Row to Tree
// https://leetcode.com//problems/add-one-row-to-tree/description/
// Fetched at 2018-07-24
// Submitted 1 month, 4 weeks ago
// Runtime: 12 ms
// This solution defeats 1.71% java solutions

/**
 * Definition for a binary tree node. public class TreeNode { int val; TreeNode left; TreeNode
 * right; TreeNode(int x) { val = x; } }
 */
class Solution {
  public TreeNode addOneRow(TreeNode root, int v, int d) {
    if (root == null) {
      return root;
    }
    if (d == 1) {
      TreeNode node = new TreeNode(v);
      node.left = root;
      return node;
    }
    Queue<TreeNode> bfs = new LinkedList<TreeNode>();
    bfs.offer(root);
    int depth = 1;
    while (!bfs.isEmpty() && depth < d - 1) {
      int n = bfs.size();
      depth++;
      for (int i = 0; i < n; i++) {
        TreeNode head = bfs.remove();
        if (head.left != null) {
          bfs.offer(head.left);
        }
        if (head.right != null) {
          bfs.offer(head.right);
        }
      }
    }
    while (!bfs.isEmpty()) {
      TreeNode head = bfs.remove();
      TreeNode left = head.left;
      TreeNode right = head.right;
      TreeNode node1 = new TreeNode(v);
      node1.left = left;
      TreeNode node2 = new TreeNode(v);
      node2.right = right;
      head.left = node1;
      head.right = node2;
    }
    return root;
  }
}
