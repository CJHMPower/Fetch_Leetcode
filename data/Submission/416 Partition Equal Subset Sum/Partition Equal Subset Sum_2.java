// -*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 416 Partition Equal Subset Sum
// https://leetcode.com//problems/partition-equal-subset-sum/description/
// Fetched at 2018-07-24
// Submitted 1 month, 2 weeks ago
// Runtime: 22 ms
// This solution defeats 45.31% java solutions

class Solution {
  public boolean canPartition(int[] nums) {
    int sum = 0;
    for (int a : nums) {
      sum += a;
    }
    if (sum % 2 != 0) {
      return false;
    }
    int target = sum / 2;
    boolean[] dp = new boolean[target + 1];
    dp[0] = true;
    for (int i = 0; i < nums.length; i++) {
      for (int j = target; j >= nums[i]; j--) {
        dp[j] = dp[j - nums[i]] || dp[j];
      }
    }
    return dp[target];
  }
}
