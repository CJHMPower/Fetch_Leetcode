//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 406 Queue Reconstruction by Height
// https://leetcode.com//problems/queue-reconstruction-by-height/description/
// Fetched at 2018-07-24
// Submitted 1 year, 9 months ago
// Runtime: 589 ms

class Solution {
 public:
  vector<pair<int, int>> reconstructQueue(vector<pair<int, int>>& people) {
    vector<pair<int, int>> temp = people;
    vector<bool> visited(people.size(), false);
    vector<pair<int, int>> result;
    while (result.size() < people.size()) {
      int head = 0;
      int mini = INT_MAX;
      for (int i = 0; i < people.size(); i++) {
        if (visited[i] == false && temp[i].second == 0 &&
            temp[i].first < mini) {
          head = i;
          mini = temp[i].first;
        }
      }
      result.push_back(people[head]);
      visited[head] = true;
      for (int i = 0; i < temp.size(); i++) {
        if (temp[i].first <= temp[head].first) {
          temp[i].second--;
        }
      }
    }
    return result;
  }
};