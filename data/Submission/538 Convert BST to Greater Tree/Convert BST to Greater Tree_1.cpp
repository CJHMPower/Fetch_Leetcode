//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 538 Convert BST to Greater Tree
// https://leetcode.com//problems/convert-bst-to-greater-tree/description/
// Fetched at 2018-07-24
// Submitted 5 months ago
// Runtime: 74 ms
// This solution defeats 4.33% cpp solutions

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
 public:
  int sum(TreeNode* root) {
    if (root == NULL) {
      return 0;
    }
    return root->val + sum(root->left) + sum(root->right);
  }
  void visit(TreeNode* root, int v) {
    if (root == NULL) {
      return;
    }
    root->val += v;
    visit(root->left, v);
    visit(root->right, v);
  }
  TreeNode* convertBST(TreeNode* root) {
    if (root == NULL) {
      return root;
    }
    int v = sum(root->right) + root->val;
    root->val = v;
    root->right = convertBST(root->right);
    TreeNode* left = convertBST(root->left);
    visit(left, v);
    root->left = left;
    return root;
  }
};