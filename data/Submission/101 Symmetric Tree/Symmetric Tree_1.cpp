//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 101 Symmetric Tree
// https://leetcode.com//problems/symmetric-tree/description/
// Fetched at 2018-07-24
// Submitted 5 months ago
// Runtime: 6 ms

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
 public:
  bool IsMirror(TreeNode *p1, TreeNode *p2) {
    if (p1 == NULL) {
      if (p2 == NULL)
        return true;
      else
        return false;
    } else if (p2 == NULL) {
      return false;
    }
    return p1->val == p2->val && IsMirror(p1->left, p2->right) &&
           IsMirror(p1->right, p2->left);
  }
  bool isSymmetric(TreeNode *root) {
    if (root == NULL) {
      return true;
    }
    return IsMirror(root->left, root->right);
  }
};