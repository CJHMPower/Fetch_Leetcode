//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 62 Unique Paths
// https://leetcode.com//problems/unique-paths/description/
// Fetched at 2018-07-24
// Submitted 2 years, 2 months ago
// Runtime: 0 ms
// This solution defeats 100.0% cpp solutions

class Solution {
 public:
  int uniquePaths(int m, int n) {
    if (m == 1 || n == 1) return 1;
    if (m < n) swap(m, n);
    long long int Factn = 1;
    for (int i = n - 1; i >= 1; i--) Factn *= i;
    long long int Factmn = 1;
    for (int i = m; i <= m + n - 2; i++) Factmn *= i;
    return Factmn / Factn;
  }
};