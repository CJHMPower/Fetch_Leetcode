// -*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 835 Linked List Components
// https://leetcode.com//problems/linked-list-components/description/
// Fetched at 2018-07-24
// Submitted 1 month, 4 weeks ago
// Runtime: 22 ms
// This solution defeats 12.51% java solutions

/**
 * Definition for singly-linked list. public class ListNode { int val; ListNode next; ListNode(int
 * x) { val = x; } }
 */
class Solution {
  public int numComponents(ListNode head, int[] G) {
    HashSet<Integer> set = new HashSet<Integer>();
    for (Integer a : G) {
      set.add(a);
    }
    int ret = 0;
    ListNode p = head;
    int i = 0;
    while (p != null) {
      i = 0;
      while (p != null && set.contains(p.val)) {
        p = p.next;
        i++;
      }
      if (i > 0) {
        ret += 1;
      }
      if (p != null) p = p.next;
    }
    return ret;
  }
}
