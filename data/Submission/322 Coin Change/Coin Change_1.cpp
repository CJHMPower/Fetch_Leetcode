//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 322 Coin Change
// https://leetcode.com//problems/coin-change/description/
// Fetched at 2018-07-24
// Submitted 5 months ago
// Runtime: 65 ms
// This solution defeats 9.98% cpp solutions

class Solution {
 public:
  int coinChange(vector<int>& coins, int amount) {
    vector<int> dp(amount + 1, -1);
    dp[0] = 0;
    set<int> nums;
    for (auto a : coins) {
      nums.insert(a);
    }
    for (int i = 1; i <= amount; i++) {
      if (nums.find(i) != nums.end()) {
        dp[i] = 1;
      } else {
        for (auto it = nums.begin(); it != nums.end(); it++) {
          if (i > *it && i - *it <= amount && dp[i - *it] > 0) {
            if (dp[i] < 0 || dp[i - *it] + 1 < dp[i]) {
              dp[i] = dp[i - *it] + 1;
            }
          }
        }
      }
    }

    return dp[amount];
  }
};