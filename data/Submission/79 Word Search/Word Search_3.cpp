//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 79 Word Search
// https://leetcode.com//problems/word-search/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 119 ms
// This solution defeats 13.9% cpp solutions

class Solution {
 public:
  bool helper(vector<vector<char>>& board, string word, int i, int j) {
    if (word.empty()) {
      return true;
    }
    if (i < 0 || i >= board.size() || j < 0 || j >= board[0].size() ||
        word[0] != board[i][j] || board[i][j] == '\0') {
      return false;
    }
    char t = board[i][j];
    board[i][j] = '\0';
    string str = word.substr(1, word.size() - 1);
    if (helper(board, str, i + 1, j) || helper(board, str, i - 1, j) ||
        helper(board, str, i, j + 1) || helper(board, str, i, j - 1)) {
      return true;
    }
    board[i][j] = t;
    return false;
  }
  bool exist(vector<vector<char>>& board, string word) {
    if (word.empty()) {
      return true;
    }
    if (board.empty()) {
      return false;
    }
    int i = 0, j = 0;
    for (i = 0; i < board.size(); i++) {
      for (j = 0; j < board[i].size(); j++)
        if (helper(board, word, i, j) == true) {
          return true;
        }
    }
    return false;
  }
};