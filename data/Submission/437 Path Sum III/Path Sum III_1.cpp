//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 437 Path Sum III
// https://leetcode.com//problems/path-sum-iii/description/
// Fetched at 2018-07-24
// Submitted 5 months ago
// Runtime: 24 ms
// This solution defeats 8.93% cpp solutions

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
 public:
  int start_pathSum(TreeNode* root, int sum) {
    if (root == NULL) {
      return 0;
    }
    int v = start_pathSum(root->left, sum - root->val) +
            start_pathSum(root->right, sum - root->val);
    if (root->val == sum) {
      v += 1;
    }
    return v;
  }
  int pathSum(TreeNode* root, int sum) {
    if (root == NULL) {
      return 0;
    }

    int val = pathSum(root->left, sum) + pathSum(root->right, sum) +
              start_pathSum(root->left, sum - root->val) +
              start_pathSum(root->right, sum - root->val);
    if (root->val == sum) {
      val += 1;
    }
    return val;
  }
};