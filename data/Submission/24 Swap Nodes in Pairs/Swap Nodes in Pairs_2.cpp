//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 24 Swap Nodes in Pairs
// https://leetcode.com//problems/swap-nodes-in-pairs/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 4 ms
// This solution defeats 7.37% cpp solutions

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
 public:
  ListNode* swapPairs(ListNode* head) {
    if (head == nullptr || head == nullptr) {
      return head;
    }
    ListNode* pre = head;
    ListNode* back = pre->next;
    while (back != nullptr && pre != nullptr) {
      swap(pre->val, back->val);
      pre = back->next;
      if (pre == nullptr)
        break;
      else {
        back = pre->next;
      }
    }
    return head;
  }
};