//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 650 2 Keys Keyboard
// https://leetcode.com//problems/2-keys-keyboard/description/
// Fetched at 2018-07-24
// Submitted 5 months, 1 week ago
// Runtime: 28 ms
// This solution defeats 21.67% cpp solutions

class Solution {
 public:
  set<int> Primes(int n) {
    set<int> ret;
    ret.insert(1);
    for (int i = 2; i <= sqrt(n); i++) {
      if (n % i == 0) {
        ret.insert(i);
        ret.insert(n / i);
      }
    }
    return ret;
  }
  int minSteps(int n) {
    if (n == 1) {
      return 0;
    }
    vector<int> dp;
    dp.push_back(0);
    for (int i = 2; i <= n; i++) {
      set<int> primes = Primes(i);
      int cmp = i;
      for (auto it = primes.begin(); it != primes.end(); it++) {
        int v = *it;
        cmp = min(cmp, dp[v - 1] + i / v);
      }
      dp.push_back(cmp);
    }
    return dp.back();
  }
};