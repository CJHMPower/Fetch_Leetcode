//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 734 Sentence Similarity
// https://leetcode.com//problems/sentence-similarity/description/
// Fetched at 2018-07-24
// Submitted 2 months, 3 weeks ago
// Runtime: 12 ms

class Solution {
 public:
  bool areSentencesSimilar(vector<string>& words1, vector<string>& words2,
                           vector<pair<string, string>> pairs) {
    if (words1.size() != words2.size()) {
      return false;
    }
    map<string, set<string>> hash;
    for (auto it = pairs.begin(); it != pairs.end(); it++) {
      if (hash.find(it->first) == hash.end()) hash[it->first] = set<string>();
      if (hash.find(it->second) == hash.end()) hash[it->second] = set<string>();
      hash[it->first].insert(it->second);
      hash[it->second].insert(it->first);
    }
    for (int i = 0; i < words1.size(); i++) {
      if (words1[i] != words2[i] &&
          (hash.find(words1[i]) == hash.end() ||
           (hash[words1[i]].find(words2[i]) == hash[words1[i]].end()))) {
        return false;
      }
    }
    return true;
  }
};