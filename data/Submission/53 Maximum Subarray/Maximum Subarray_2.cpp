//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 53 Maximum Subarray
// https://leetcode.com//problems/maximum-subarray/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 15 ms
// This solution defeats 7.08% cpp solutions

class Solution {
 public:
  int maxSubArray(vector<int>& nums) {
    if (nums.empty()) {
      return 0;
    }
    vector<int> dp(nums.size(), INT_MIN);
    dp[0] = nums[0];
    int result = dp[0];
    for (int i = 1; i < dp.size(); i++) {
      dp[i] = max(dp[i - 1] + nums[i], nums[i]);
      result = max(result, dp[i]);
    }
    return result;
  }
};