//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 396 Rotate Function
// https://leetcode.com//problems/rotate-function/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 13 ms
// This solution defeats 10.29% cpp solutions

class Solution {
 public:
  int rotateF(vector<int>& A, int k) {
    int n = A.size();
    int sum = 0;
    for (int i = 0; i < n; i++) {
      sum += i * A[(i + n - k) % n];
    }
    return sum;
  }
  int maxRotateFunction(vector<int>& A) {
    if (A.empty()) {
      return 0;
    }
    int n = A.size();
    int sum = accumulate(A.begin(), A.end(), 0);
    int F0 = rotateF(A, 0);
    int old = F0;
    int now;
    int result = old;
    for (int k = 1; k < n; k++) {
      now = old + sum - n * A[n - k];
      if (now > result) {
        result = now;
      }
      old = now;
    }
    return result;
  }
};