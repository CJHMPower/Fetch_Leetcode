//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 539 Minimum Time Difference
// https://leetcode.com//problems/minimum-time-difference/description/
// Fetched at 2018-07-24
// Submitted 3 months ago
// Runtime: 26 ms
// This solution defeats 16.13% cpp solutions

class Solution {
 public:
  int diff(string &a, string &b) {
    int amin = stoi(a.substr(0, 2)) * 60 + stoi(a.substr(3, 5));
    int bmin = stoi(b.substr(0, 2)) * 60 + stoi(b.substr(3, 5));
    return min((amin - bmin + 1440) % 1440, ((bmin - amin) + 1440) % 1440);
  }
  int findMinDifference(vector<string> &timePoints) {
    int ret = 720;
    sort(timePoints.begin(), timePoints.end());
    int n = timePoints.size();
    for (int i = 0; i < n; i++) {
      ret = min(ret, diff(timePoints[i], timePoints[(i + 1) % n]));
    }
    return ret;
  }
};