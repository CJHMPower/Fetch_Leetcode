//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 162 Find Peak Element
// https://leetcode.com//problems/find-peak-element/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 4 ms
// This solution defeats 98.63% cpp solutions

class Solution {
 public:
  int findPeakElement(vector<int>& nums) {
    if (nums.size() == 1) {
      return 0;
    }
    if (nums[1] < nums[0]) {
      return 0;
    }
    if (nums[nums.size() - 1] > nums[nums.size() - 2]) {
      return nums.size() - 1;
    }
    for (int i = 1; i < nums.size() - 1; i++) {
      if (nums[i] > nums[i - 1] && nums[i] > nums[i + 1]) {
        return i;
      }
    }
    return 0;
  }
};