//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 169 Majority Element
// https://leetcode.com//problems/majority-element/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 40 ms
// This solution defeats 1.21% cpp solutions

class Solution {
 public:
  int majorityElement(vector<int>& nums) {
    sort(nums.begin(), nums.end());
    if (nums.size() < 2) {
      return nums[0];
    }
    if (nums.size() == 2 && nums[0] == nums[1]) {
      return nums[0];
    }
    int i = 0, j = 1;
    while (true) {
      if (nums[i] == nums[j] && j - i + 1 > nums.size() / 2) {
        return nums[i];
      }
      if (nums[i] != nums[j]) {
        i = j;
        j++;
      } else {
        j++;
      }
    }
  }
};