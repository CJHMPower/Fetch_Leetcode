//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 67 Add Binary
// https://leetcode.com//problems/add-binary/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 4 ms
// This solution defeats 28.36% cpp solutions

class Solution {
 public:
  pair<char, char> basic(char a, char b, char c) {
    pair<char, char> result;
    int temp = (int)(a - '0') + (int)(b - '0') + (int)(c - '0');
    result.second = (char)(temp % 2 + '0');
    result.first = (char)(temp / 2 + '0');
    return result;
  }
  string addBinary(string a, string b) {
    int size = max(a.size(), b.size()) + 1;
    if (b.size() > a.size()) {
      swap(a, b);
    }
    string result(size, '0');
    char up = '0';
    int ida = a.size() - 1, idb = b.size() - 1, i = result.size() - 1;
    while (idb >= 0) {
      pair<char, char> sum = basic(a[ida], b[idb], up);
      up = sum.first;
      result[i] = sum.second;
      ida--;
      idb--;
      i--;
    }
    while (ida >= 0 && i >= 0) {
      pair<char, char> sum = basic(a[ida], '0', up);
      result[i] = sum.second;
      up = sum.first;
      ida--;
      i--;
    }
    if (up == '1') {
      result[i] = '1';
    }
    auto it = result.begin();
    while (result.size() > 1 && it != result.end() && *it == '0') {
      it = result.erase(it);
    }
    return result;
  }
};