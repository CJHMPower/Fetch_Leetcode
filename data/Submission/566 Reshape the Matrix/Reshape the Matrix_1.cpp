//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 566 Reshape the Matrix
// https://leetcode.com//problems/reshape-the-matrix/description/
// Fetched at 2018-07-24
// Submitted 2 months, 2 weeks ago
// Runtime: 38 ms
// This solution defeats 3.58% cpp solutions

class Solution {
 public:
  vector<vector<int>> matrixReshape(vector<vector<int>>& nums, int r, int c) {
    if (nums.empty() || r * c != nums.size() * nums[0].size()) {
      return nums;
    }
    vector<vector<int>> ret(r, vector<int>(c, 0));
    int x = 0, y = 0;
    for (int i = 0; i < r; i++) {
      for (int j = 0; j < c; j++, y++) {
        if (y >= nums[0].size()) {
          x++;
          y = 0;
        }
        ret[i][j] = nums[x][y];
      }
    }
    return ret;
  }
};