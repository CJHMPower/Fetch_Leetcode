//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 251 Flatten 2D Vector
// https://leetcode.com//problems/flatten-2d-vector/description/
// Fetched at 2018-07-24
// Submitted 4 months ago
// Runtime: 16 ms
// This solution defeats 3.78% cpp solutions

class Vector2D {
 public:
  Vector2D(vector<vector<int>>& vec2d) {
    for (auto it1 = vec2d.begin(); it1 != vec2d.end(); it1++) {
      for (auto it2 = it1->begin(); it2 != it1->end(); it2++) {
        nums.push_back(*it2);
      }
    }
    it = nums.begin();
  }

  int next() { return *(it++); }

  bool hasNext() { return it != nums.end(); }
  vector<int> nums;
  vector<int>::iterator it = nums.begin();
};

/**
 * Your Vector2D object will be instantiated and called as such:
 * Vector2D i(vec2d);
 * while (i.hasNext()) cout << i.next();
 */