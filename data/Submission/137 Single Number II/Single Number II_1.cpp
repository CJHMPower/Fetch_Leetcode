//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 137 Single Number II
// https://leetcode.com//problems/single-number-ii/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 29 ms

class Solution {
 public:
  int singleNumber(vector<int>& nums) {
    map<int, int> hash;
    for (int i = 0; i < nums.size(); i++) {
      hash[nums[i]]++;
    }
    for (auto it = hash.begin(); it != hash.end(); it++) {
      if (it->second == 1) {
        return it->first;
      }
    }
    return nums[0];
  }
};