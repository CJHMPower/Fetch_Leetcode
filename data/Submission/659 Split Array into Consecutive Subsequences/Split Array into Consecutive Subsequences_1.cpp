//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 659 Split Array into Consecutive Subsequences
// https://leetcode.com//problems/split-array-into-consecutive-subsequences/description/
// Fetched at 2018-07-24
// Submitted 3 weeks, 3 days ago
// Runtime: 84 ms
// This solution defeats 26.1% cpp solutions

class Solution {
 public:
  bool isPossible(vector<int>& nums) {
    if (nums.size() < 3) return false;
    vector<vector<int>> sequences;
    bool pushed = false;
    for (int a : nums) {
      pushed = false;
      for (int i = sequences.size() - 1; i >= 0; i--) {
        if (sequences[i].back() == a - 1) {
          sequences[i].push_back(a);
          pushed = true;
          break;
        }
      }
      if (!pushed) {
        for (auto v : sequences) {
          if (v.size() < 3 && v.back() != a) return false;
        }
        sequences.push_back(vector<int>(1, a));
      }
    }
    for (auto v : sequences) {
      if (v.size() < 3) return false;
    }
    return true;
  }
};