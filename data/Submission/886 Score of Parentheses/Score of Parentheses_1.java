// -*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 886 Score of Parentheses
// https://leetcode.com//problems/score-of-parentheses/description/
// Fetched at 2018-07-24
// Submitted 3 weeks, 3 days ago
// Runtime: 6 ms
// This solution defeats 12.28% java solutions

class Solution {
  public int scoreOfParentheses(String S) {
    Deque<String> stack = new ArrayDeque<String>();
    for (int i = 0; i < S.length(); i++) {
      if (S.charAt(i) == '(') {
        stack.push(new String("("));
      } else if (stack.peek().equals(new String("("))) {
        stack.poll();
        if (stack.size() == 0 || stack.peek().equals(new String("("))) stack.push(new String("1"));
        else {
          int top = Integer.parseInt(stack.peek());
          stack.poll();
          stack.push(new String((top + 1) + ""));
        }
      } else {
        int top = Integer.parseInt(stack.poll());
        stack.poll();
        top *= 2;
        if (stack.size() == 0 || stack.peek().equals(new String("(")))
          stack.push(new String(top + ""));
        else {
          int top2 = Integer.parseInt(stack.peek());
          stack.poll();
          stack.push(new String((top + top2) + ""));
        }
      }
    }
    return Integer.parseInt(stack.peek());
  }
}
