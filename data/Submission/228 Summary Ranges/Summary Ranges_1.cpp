//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 228 Summary Ranges
// https://leetcode.com//problems/summary-ranges/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 0 ms
// This solution defeats 100.0% cpp solutions

class Solution {
 public:
  vector<string> summaryRanges(vector<int>& nums) {
    vector<string> result;
    if (nums.empty()) {
      return result;
    }
    if (nums.size() == 1) {
      result.push_back(to_string(nums[0]));
      return result;
    }
    int now = nums[0], start = nums[0];
    string ele = to_string(now);
    for (int i = 1; i < nums.size(); i++) {
      if (nums[i] == now) {
        if (i == nums.size() - 1) {
          if (now > start) {
            ele = ele + "->";
          }
          ele = ele + to_string(now);
          result.push_back(ele);
        }
        continue;
      }
      if (nums[i] - now == 1) {
        now++;
        if (i == nums.size() - 1) {
          ele = ele + "->";
          ele = ele + to_string(now);
          result.push_back(ele);
        }
        continue;
      } else if (now > start) {
        ele = ele + "->";
        ele = ele + to_string(now);
      }
      result.push_back(ele);
      start = nums[i];
      now = nums[i];
      ele = to_string(nums[i]);
      if (i == nums.size() - 1) {
        result.push_back(ele);
      }
    }
    return result;
  }
};