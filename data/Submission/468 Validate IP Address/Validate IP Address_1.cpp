//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 468 Validate IP Address
// https://leetcode.com//problems/validate-ip-address/description/
// Fetched at 2018-07-24
// Submitted 3 months, 2 weeks ago
// Runtime: 4 ms
// This solution defeats 6.15% cpp solutions

class Solution {
 public:
  string validIPAddress(string IP) {
    bool pv4 = true, pv6 = true, sep = false, first = true;
    int count = 0, len = 0;
    int i = 0;

    while (i < IP.size() && (pv4 || pv6)) {
      if (IP[i] == '.') {
        if (sep == false || i == IP.size() - 1) {
          return "Neither";
        } else {
          sep = false;
          pv6 = false;
          if ((first == false && len == 0) || len > 3) {
            return "Neither";
          }
          len = 0;
          count++;
        }
        if (count > 3) {
          return "Neither";
        }
      } else if (IP[i] == ':') {
        if (sep == false || i == IP.size() - 1) {
          return "Neither";
        } else {
          sep = false;
          pv4 = false;
          if ((first == false && len == 0) || len > 4) {
            return "Neither";
          }
          len = 0;
          count++;
        }
        if (count > 7) {
          return "Neither";
        }
      } else {
        sep = true;
        if (pv4 == true && IP[i] == '0' && len == 0) {
          if (i + 1 < IP.size() && IP[i + 1] != '.') {
            pv4 = false;
          }
        }
        if (!(IP[i] >= '0' && IP[i] <= '9')) {
          if (!((IP[i] >= 'a' && IP[i] <= 'f') ||
                (IP[i] >= 'A' && IP[i] <= 'F'))) {
            return "Neither";
          }
          pv4 = false;
        }
        len++;
        if (len > 3) {
          if (len > 4) {
            return "Neither";
          }
          pv4 = false;
        }
        if (len == 3 && pv4 == true) {
          string s = IP.substr(i - 2, i + 1);

          if (stoi(s) > 255) {
            pv4 = false;
          }
        }
      }
      if (first == true) {
        first = false;
      }
      i++;
    }
    if (pv4 == true && count == 3) {
      return "IPv4";
    }
    if (pv6 == true && count == 7) {
      return "IPv6";
    }
    return "Neither";
  }
};