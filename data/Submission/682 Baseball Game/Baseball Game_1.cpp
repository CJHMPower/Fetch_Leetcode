//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 682 Baseball Game
// https://leetcode.com//problems/baseball-game/description/
// Fetched at 2018-07-24
// Submitted 2 months, 1 week ago
// Runtime: 6 ms
// This solution defeats 6.36% cpp solutions

class Solution {
 public:
  int calPoints(vector<string>& ops) {
    stack<int> s;
    int ret = 0;
    for (int i = 0; i < ops.size(); i++) {
      if ((ops[i][0] >= '0' && ops[i][0] <= '9') || ops[i][0] == '-') {
        s.push(stoi(ops[i]));
      } else if (ops[i] == "+") {
        int val1 = s.top();
        s.pop();
        int val2 = s.top();
        s.push(val1);
        s.push(val1 + val2);
      } else if (ops[i] == "D") {
        int val = s.top();
        s.push(val * 2);
      } else if (ops[i] == "C") {
        s.pop();
      }
    }
    while (!s.empty()) {
      ret += s.top();
      s.pop();
    }
    return ret;
  }
};