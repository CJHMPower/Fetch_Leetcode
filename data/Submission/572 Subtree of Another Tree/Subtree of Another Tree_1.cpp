//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 572 Subtree of Another Tree
// https://leetcode.com//problems/subtree-of-another-tree/description/
// Fetched at 2018-07-24
// Submitted 5 months ago
// Runtime: 37 ms
// This solution defeats 0.69% cpp solutions

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
 public:
  bool isHead(TreeNode* s, TreeNode* t) {
    if (t == NULL) {
      if (s == NULL) {
        return true;
      } else {
        return false;
      }
    } else if (s == NULL) {
      return false;
    }
    return s->val == t->val && isHead(s->left, t->left) &&
           isHead(s->right, t->right);
  }
  bool isSubtree(TreeNode* s, TreeNode* t) {
    if (t == NULL) {
      return true;
    }
    if (s == NULL) {
      return false;
    }

    return (s->val == t->val && isHead(s->left, t->left) &&
            isHead(s->right, t->right)) ||
           (isSubtree(s->left, t) || isSubtree(s->right, t));
  }
};