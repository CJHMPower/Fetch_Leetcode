//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 50 Pow(x, n)
// https://leetcode.com//problems/pow(x,-n)/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 4 ms
// This solution defeats 97.54% cpp solutions

class Solution {
 public:
  double myPow(double x, int n) {
    if (n == 0) {
      return 1;
    } else if (x == 0) {
      return 0;
    }
    int sign = 1;
    long long int tmp = n;
    if (tmp < 0) {
      tmp = -tmp;
      sign = -1;
    }
    double ans = 1;
    while (tmp > 0) {
      if (tmp & 1) {
        ans = ans * x;
      }
      x *= x;
      tmp >>= 1;
    }
    if (sign == 1) {
      return ans;
    } else {
      return 1 / ans;
    }
  }
};