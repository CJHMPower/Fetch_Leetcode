//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 56 Merge Intervals
// https://leetcode.com//problems/merge-intervals/description/
// Fetched at 2018-07-24
// Submitted 5 months, 1 week ago
// Runtime: 15 ms
// This solution defeats 9.86% cpp solutions

/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
 public:
  vector<Interval> merge(vector<Interval> &intervals) {
    if (intervals.empty()) {
      return intervals;
    }
    sort(intervals.begin(), intervals.end(),
         [](Interval &a, Interval &b) { return a.start < b.start; });
    vector<Interval> ret;
    ret.push_back(intervals[0]);
    int i = 1;
    while (i < intervals.size()) {
      while (i < intervals.size() && intervals[i].start <= ret.back().end) {
        if (intervals[i].end > ret.back().end) {
          ret[ret.size() - 1].end = intervals[i].end;
        }
        i++;
      }
      if (i < intervals.size()) {
        ret.push_back(intervals[i]);
      }
    }
    return ret;
  }
};