//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 129 Sum Root to Leaf Numbers
// https://leetcode.com//problems/sum-root-to-leaf-numbers/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 4 ms
// This solution defeats 5.17% cpp solutions

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
 public:
  int sumNumbers(TreeNode* root) {
    if (root == nullptr) {
      return 0;
    }
    int total = 0;
    queue<TreeNode*> Q;
    Q.push(root);
    TreeNode* temp = nullptr;
    while (!Q.empty()) {
      temp = Q.front();
      Q.pop();
      if (temp->left != nullptr) {
        temp->left->val += 10 * temp->val;
        Q.push(temp->left);
      }
      if (temp->right != nullptr) {
        temp->right->val += 10 * temp->val;
        Q.push(temp->right);
      }
      if (temp->left == nullptr && temp->right == nullptr) {
        total += temp->val;
      }
    }
    return total;
  }
};