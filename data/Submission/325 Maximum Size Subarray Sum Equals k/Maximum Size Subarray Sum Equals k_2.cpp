//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 325 Maximum Size Subarray Sum Equals k
// https://leetcode.com//problems/maximum-size-subarray-sum-equals-k/description/
// Fetched at 2018-07-24
// Submitted 3 months, 1 week ago
// Runtime: 624 ms
// This solution defeats 2.24% cpp solutions

class Solution {
 public:
  int maxSubArrayLen(vector<int>& nums, int k) {
    if (nums.empty()) {
      return 0;
    }
    vector<int> dp(nums.size() + 1, 0);
    for (int i = 1; i <= nums.size(); i++) {
      dp[i] = dp[i - 1] + nums[i - 1];
    }
    for (int len = nums.size(); len > 0; len--) {
      for (int i = nums.size(); i - len >= 0; i--) {
        if (dp[i] - dp[i - len] == k) {
          return len;
        }
      }
    }
    return 0;
  }
};