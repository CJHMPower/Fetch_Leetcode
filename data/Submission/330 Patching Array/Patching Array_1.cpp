//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 330 Patching Array
// https://leetcode.com//problems/patching-array/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 8 ms
// This solution defeats 4.27% cpp solutions

class Solution {
 public:
  int minPatches(vector<int>& nums, int n) {
    int i = 0;
    long long int now = 0;
    int count = 0;
    while (now < n) {
      if (i < nums.size() && nums[i] <= now + 1) {
        now += nums[i];
        i++;
      } else {
        now = 2 * now + 1;
        count++;
      }
    }
    return count;
  }
};