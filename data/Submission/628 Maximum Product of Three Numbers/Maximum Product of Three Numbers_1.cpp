//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 628 Maximum Product of Three Numbers
// https://leetcode.com//problems/maximum-product-of-three-numbers/description/
// Fetched at 2018-07-24
// Submitted 4 months ago
// Runtime: 79 ms

class Solution {
 public:
  int maximumProduct(vector<int>& nums) {
    vector<int> pos;
    vector<int> neg;
    for (auto a : nums) {
      if (a >= 0) {
        pos.push_back(a);
      } else {
        neg.push_back(a);
      }
    }

    sort(neg.begin(), neg.end(), [](int a, int b) { return a > b; });
    if (pos.size() == 0) {
      return neg[0] * neg[1] * neg[2];
    }
    sort(pos.begin(), pos.end());
    if (pos.size() < 3) {
      if (neg.size() > 1) {
        return pos.back() * neg.back() * neg[neg.size() - 2];
      } else {
        return pos.back() * neg.back() * pos[pos.size() - 2];
      }
    } else if (neg.size() > 2) {
      return pos.back() * max(neg.back() * neg[neg.size() - 2],
                              pos[pos.size() - 2] * pos[pos.size() - 3]);
    } else {
      return pos.back() * pos[pos.size() - 2] * pos[pos.size() - 3];
    }
  }
};