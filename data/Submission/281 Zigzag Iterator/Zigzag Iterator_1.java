// -*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 281 Zigzag Iterator
// https://leetcode.com//problems/zigzag-iterator/description/
// Fetched at 2018-07-24
// Submitted 1 month, 2 weeks ago
// Runtime: 2 ms
// This solution defeats 100.0% java solutions

public class ZigzagIterator {
  public int i, j;
  public List<Integer> l1;
  public List<Integer> l2;

  public ZigzagIterator(List<Integer> v1, List<Integer> v2) {
    i = 0;
    j = 0;
    l1 = v1;
    l2 = v2;
  }

  public int next() {
    try {
      if (i >= l1.size()) {
        return l2.get(j++);
      } else if (j >= l2.size()) {
        return l1.get(i++);
      } else if (i == j) {
        return l1.get(i++);
      } else {
        return l2.get(j++);
      }
    } catch (RuntimeException e) {
      System.out.println("Iterator out of range");
      return 0;
    }
  }

  public boolean hasNext() {
    return i < l1.size() || j < l2.size();
  }
}

/**
 * Your ZigzagIterator object will be instantiated and called as such: ZigzagIterator i = new
 * ZigzagIterator(v1, v2); while (i.hasNext()) v[f()] = i.next();
 */
