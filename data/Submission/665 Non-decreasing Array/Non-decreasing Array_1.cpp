//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 665 Non-decreasing Array
// https://leetcode.com//problems/non-decreasing-array/description/
// Fetched at 2018-07-24
// Submitted 5 months, 1 week ago
// Runtime: 50 ms
// This solution defeats 3.26% cpp solutions

class Solution {
 public:
  bool checkPossibility(vector<int>& nums) {
    int flag = 0;
    int i = 0;
    while (i < nums.size() - 1) {
      if (nums[i] > nums[i + 1]) {
        flag++;
        if (flag > 1) {
          return false;
        }
        if (i - 1 < 0 || i + 1 >= nums.size() || nums[i - 1] <= nums[i + 1]) {
          i++;
          continue;
        } else if (i + 2 >= nums.size() || nums[i + 2] >= nums[i]) {
          i++;
          continue;
        } else {
          return false;
        }
      }
      i++;
    }
    return true;
  }
};