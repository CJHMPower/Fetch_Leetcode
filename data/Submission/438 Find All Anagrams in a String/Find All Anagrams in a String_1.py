#-*- coding:utf-8 -*-
#Generated by the Fetch-Leetcode project on the Github
#https://github.com/CJHMPower/Fetch-Leetcode/

#438 Find All Anagrams in a String
#https://leetcode.com//problems/find-all-anagrams-in-a-string/description/
#Fetched at 2018-07-24
#Submitted 6 months ago
#Runtime: 193 ms
#This solution defeats 34.36% python solutions


class Solution(object):
    def findAnagrams(self, s, p):
        """
        :type s: str
        :type p: str
        :rtype: List[int]
        
        """
        ret = []
        if (len(p) > len(s)):
            return []
        hash_p = [0 for i in range(26)]
        hash_s = [0 for i in range(26)]
        for i in range(len(p)):
            hash_p[ord(p[i]) - ord('a')] += 1
            hash_s[ord(s[i]) - ord('a')] += 1

        for i in range(len(s) - len(p) + 1):
            if hash_s == hash_p:
                ret.append(i)
            hash_s[ord(s[i]) - ord('a')] -= 1
            if i + len(p) < len(s):
                hash_s[ord(s[i + len(p)]) - ord('a')] += 1
        return ret
