//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 255 Verify Preorder Sequence in Binary Search Tree
// https://leetcode.com//problems/verify-preorder-sequence-in-binary-search-tree/description/
// Fetched at 2018-07-24
// Submitted 4 months ago
// Runtime: 633 ms
// This solution defeats 12.18% cpp solutions

class Solution {
 public:
  bool verifyPreorder(vector<int>& preorder, int low, int high) {
    if (high - low <= 2) {
      return true;
    }
    int root = preorder[low];
    int i = low + 1;
    while (i < high && preorder[i] == root) {
      i++;
    }

    while (i < high && preorder[i] < root) {
      i++;
    }
    for (int j = i; j < high; j++) {
      if (preorder[j] < root) {
        return false;
      }
    }

    return verifyPreorder(preorder, low + 1, i) &&
           verifyPreorder(preorder, i, high);
  }
  bool verifyPreorder(vector<int>& preorder) {
    if (preorder.size() <= 2) {
      return true;
    }
    return verifyPreorder(preorder, 0, preorder.size());
  }
};