//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 303 Range Sum Query - Immutable
// https://leetcode.com//problems/range-sum-query---immutable/description/
// Fetched at 2018-07-24
// Submitted 1 year, 10 months ago
// Runtime: 26 ms
// This solution defeats 100.0% cpp solutions

class NumArray {
 public:
  NumArray(vector<int> &nums) {
    data.resize(nums.size());
    for (int i = 0; i < nums.size(); i++) {
      data[i] = (i == 0 ? nums[i] : data[i - 1] + nums[i]);
    }
  }

  int sumRange(int i, int j) {
    if (i == 0) {
      return data[j];
    } else {
      return data[j] - data[i - 1];
    }
  }
  vector<int> data;
};

// Your NumArray object will be instantiated and called as such:
// NumArray numArray(nums);
// numArray.sumRange(0, 1);
// numArray.sumRange(1, 2);