//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 264 Ugly Number II
// https://leetcode.com//problems/ugly-number-ii/description/
// Fetched at 2018-07-24
// Submitted 2 years, 1 month ago
// Runtime: 16 ms
// This solution defeats 18.99% cpp solutions

class Solution {
 public:
  int nthUglyNumber(int n) {
    if (n == 1) {
      return 1;
    }
    vector<int> dp(n + 1);
    dp[1] = 1;
    int mul2 = 1, mul3 = 1, mul5 = 1;
    for (int i = 2; i <= n; i++) {
      if (dp[mul2] * 2 == dp[mul3] * 3 && dp[mul2] * 2 == dp[mul5] * 5) {
        dp[i] = dp[mul2] * 2;
        mul2++;
        mul3++;
        mul5++;
      } else if (dp[mul2] * 2 > dp[mul3] * 3) {
        if (dp[mul5] * 5 > dp[mul3] * 3) {
          dp[i] = dp[mul3] * 3;
          mul3++;
        } else if (dp[mul5] * 5 < dp[mul3] * 3) {
          dp[i] = dp[mul5] * 5;
          mul5++;
        } else {
          dp[i] = dp[mul3] * 3;
          mul3++;
          mul5++;
        }
      } else if (dp[mul3] * 3 > dp[mul2] * 2) {
        if (dp[mul2] * 2 < dp[mul5] * 5) {
          dp[i] = dp[mul2] * 2;
          mul2++;
        } else if (dp[mul5] * 5 < dp[mul2] * 2) {
          dp[i] = dp[mul5] * 5;
          mul5++;
        } else {
          dp[i] = dp[mul5] * 5;
          mul2++;
          mul5++;
        }
      } else if (dp[mul5] * 5 > dp[mul3] * 3) {
        dp[i] = dp[mul3] * 3;
        mul2++;
        mul3++;
      } else if (dp[mul5] * 5 < dp[mul3] * 3) {
        dp[i] = dp[mul5] * 5;
        mul5++;
      }
    }
    return dp[n];
  }
};