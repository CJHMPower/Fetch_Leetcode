//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 525 Contiguous Array
// https://leetcode.com//problems/contiguous-array/description/
// Fetched at 2018-07-24
// Submitted 3 months, 1 week ago
// Runtime: 167 ms
// This solution defeats 1.87% cpp solutions

class Solution {
 public:
  int findMaxLength(vector<int>& nums) {
    if (nums.empty()) {
      return 0;
    }
    int diff = 0;
    int ret = 0;
    map<int, int> hash;
    hash[0] = -1;
    for (int i = 0; i < nums.size(); i++) {
      if (nums[i] == 0) {
        diff--;
      } else {
        diff++;
      }
      if (hash.find(diff) == hash.end()) {
        hash[diff] = i;
      } else {
        ret = max(ret, i - hash[diff]);
      }
    }
    return ret;
  }
};