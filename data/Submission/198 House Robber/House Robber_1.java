// -*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 198 House Robber
// https://leetcode.com//problems/house-robber/description/
// Fetched at 2018-07-24
// Submitted 1 month, 1 week ago
// Runtime: 3 ms
// This solution defeats 100.0% java solutions

class Solution {
  public int rob(int[] nums) {
    if (nums.length == 0) return 0;
    int rob = nums[0], norob = 0, temp = 0;
    for (int i = 1; i < nums.length; i++) {
      temp = norob;
      norob = Math.max(norob, rob);
      rob = Math.max(rob, temp + nums[i]);
    }
    return Math.max(rob, norob);
  }
}
