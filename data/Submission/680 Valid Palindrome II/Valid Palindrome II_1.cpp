//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 680 Valid Palindrome II
// https://leetcode.com//problems/valid-palindrome-ii/description/
// Fetched at 2018-07-24
// Submitted 3 months ago
// Runtime: 164 ms

class Solution {
 public:
  bool is_valid(string &s, int low, int high) {
    while (low < high) {
      if (s[low] == s[high]) {
        low++;
        high--;
      } else {
        return false;
      }
    }
    return true;
  }
  bool validPalindrome(string s) {
    int low = 0, high = s.size() - 1;
    while (low < high) {
      if (s[low] == s[high]) {
        low++;
        high--;
      } else {
        return is_valid(s, low + 1, high) || is_valid(s, low, high - 1);
      }
    }
    return true;
  }
};