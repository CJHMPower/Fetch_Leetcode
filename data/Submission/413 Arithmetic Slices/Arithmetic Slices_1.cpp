//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 413 Arithmetic Slices
// https://leetcode.com//problems/arithmetic-slices/description/
// Fetched at 2018-07-24
// Submitted 5 months ago
// Runtime: 5 ms
// This solution defeats 5.26% cpp solutions

class Solution {
 public:
  int numberOfArithmeticSlices(vector<int>& A) {
    if (A.empty()) {
      return 0;
    }
    int n = A.size();
    int ret = 0;
    vector<int> dp(n, 0);
    for (int i = 2; i < n; i++) {
      if (A[i] - A[i - 1] == A[i - 1] - A[i - 2]) {
        dp[i] = dp[i - 1] + 1;
      }

      ret += dp[i];
    }
    return ret;
  }
};