//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 119 Pascal's Triangle II
// https://leetcode.com//problems/pascal's-triangle-ii/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 0 ms
// This solution defeats 100.0% cpp solutions

class Solution {
 public:
  vector<int> getRow(int rowIndex) {
    vector<int> result(rowIndex + 1, 1);
    if (rowIndex == 0) {
      return result;
    }
    long long int temp;
    result[1] = rowIndex;
    int i = 2;
    while (i <= (rowIndex + 1) / 2) {
      temp = (long long int)(result[i - 1]) * (rowIndex + 1 - i);
      result[i] = temp / i;
      i++;
    }
    for (int j = 0; j < (rowIndex + 1) / 2; j++) {
      result[rowIndex - j] = result[j];
    }
    return result;
  }
};