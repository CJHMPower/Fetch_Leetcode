//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 155 Min Stack
// https://leetcode.com//problems/min-stack/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 56 ms
// This solution defeats 7.94% cpp solutions

class MinStack {
 public:
  /** initialize your data structure here. */
  MinStack() {}
  void push(int x) {
    data.push(x);
    if (!minele.empty()) {
      if (minele.top() > x)
        minele.push(x);
      else {
        minele.push(minele.top());
      }
      return;
    }
    minele.push(x);
  }
  void pop() {
    if (!data.empty()) {
      data.pop();
    }
    if (!minele.empty()) {
      minele.pop();
    }
  }

  int top() { return data.top(); }

  int getMin() { return minele.top(); }
  stack<int> data;
  stack<int> minele;
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */