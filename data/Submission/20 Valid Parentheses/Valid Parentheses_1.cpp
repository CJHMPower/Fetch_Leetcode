//-*- coding:utf-8 -*-
// Generated by the Fetch-Leetcode project on the Github
// https://github.com/CJHMPower/Fetch-Leetcode/

// 20 Valid Parentheses
// https://leetcode.com//problems/valid-parentheses/description/
// Fetched at 2018-07-24
// Submitted 2 years ago
// Runtime: 0 ms
// This solution defeats 100.0% cpp solutions

class Solution {
 public:
  bool match(char a, char b) {
    return (a == '(' && b == ')') || (a == '[' && b == ']') ||
           (a == '{' && b == '}');
  }
  bool isValid(string s) {
    stack<char> left;
    for (auto v : s) {
      if (v == '(' || v == '[' || v == '{') {
        left.push(v);
      } else if (v == ')' || v == ']' || v == '}') {
        if (left.empty()) {
          return false;
        } else {
          char c = left.top();
          if (match(c, v) == false) {
            return false;
          }
          left.pop();
        }
      } else {
        return false;
      }
    }
    return left.empty();
  }
};